import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EjercicioRepository {
    private Connection conn;

    public EjercicioRepository() throws SQLException {
        this.conn = DatabaseConnection.getConnection();
    }

    public void closeConnection() throws SQLException {
        if (conn != null && !conn.isClosed()) {
            conn.close();
        }
    }

    public void crearEjercicio(Ejercicio ejercicio) throws SQLException {
        String sql = "INSERT INTO ejercicio (fecha_hora_fin_vigencia, link_ejercicio, nombre_ejercicio) VALUES (?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setTimestamp(1, new java.sql.Timestamp(ejercicio.getFechaHoraFinVigenciaEjercicio().getTime()));
            stmt.setString(2, ejercicio.getLinkEjercicio());
            stmt.setString(3, ejercicio.getNombreEjercicio());
            stmt.executeUpdate();
        }
    }

    public Ejercicio obtenerEjercicioPorId(Long id) throws SQLException {
        String sql = "SELECT * FROM ejercicio WHERE cod_ejercicio = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, id);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return new Ejercicio(
                            rs.getLong("cod_ejercicio"),
                            rs.getTimestamp("fecha_hora_fin_vigencia").getTime(),
                            rs.getString("link_ejercicio"),
                            rs.getString("nombre_ejercicio")
                    );
                }
            }
        }
        return null;
    }

    public List<Ejercicio> obtenerTodosLosEjercicios() throws SQLException {
        List<Ejercicio> ejercicios = new ArrayList<>();
        String sql = "SELECT * FROM ejercicio";
        try (PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                Ejercicio ejercicio = new Ejercicio(
                        rs.getLong("cod_ejercicio"),
                        rs.getTimestamp("fecha_hora_fin_vigencia").getTime(),
                        rs.getString("link_ejercicio"),
                        rs.getString("nombre_ejercicio")
                );
                ejercicios.add(ejercicio);
            }
        }
        return ejercicios;
    }

    public void actualizarEjercicio(Ejercicio ejercicio) throws SQLException {
        String sql = "UPDATE ejercicio SET fecha_hora_fin_vigencia = ?, link_ejercicio = ?, nombre_ejercicio = ? WHERE cod_ejercicio = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setTimestamp(1, new java.sql.Timestamp(ejercicio.getFechaHoraFinVigenciaEjercicio().getTime()));
            stmt.setString(2, ejercicio.getLinkEjercicio());
            stmt.setString(3, ejercicio.getNombreEjercicio());
            stmt.setLong(4, ejercicio.getCodEjercicio());
            stmt.executeUpdate();
        }
    }

    public void eliminarEjercicio(Long id) throws SQLException {
        String sql = "DELETE FROM ejercicio WHERE cod_ejercicio = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, id);
            stmt.executeUpdate();
        }
    }
}
