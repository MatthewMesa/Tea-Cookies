import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UsuarioRepository {
    private Connection conn;

    public UsuarioRepository() throws SQLException {
        this.conn = DatabaseConnection.getConnection();
    }

    public void closeConnection() throws SQLException {
        if (conn != null && !conn.isClosed()) {
            conn.close();
        }
    }

    public void crearUsuario(Usuario usuario) throws SQLException {
        String sql = "INSERT INTO usuario (cuilUsuario, correoUsuario, fechaNacimientoUsuario, nombreUsuario, razonSocialUsuario, tipoUsuario_id) VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, usuario.getCuilUsuario());
            stmt.setString(2, usuario.getCorreoUsuario());
            stmt.setTimestamp(3, new java.sql.Timestamp(usuario.getFechaNacimientoUsuario().getTime()));
            stmt.setString(4, usuario.getNombreUsuario());
            stmt.setString(5, usuario.getRazonSocialUsuario());
            stmt.setLong(6, usuario.getTipoUsuario().getCodTipoUsuario()); // Asumo que getCodTipoUsuario() devuelve el ID del TipoUsuario
            stmt.executeUpdate();
        }
    }

    public Usuario obtenerUsuarioPorCuil(Long cuilUsuario) throws SQLException {
        String sql = "SELECT * FROM usuario WHERE cuilUsuario = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, cuilUsuario);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    Usuario usuario = new Usuario();
                    usuario.setCuilUsuario(rs.getLong("cuilUsuario"));
                    usuario.setCorreoUsuario(rs.getString("correoUsuario"));
                    usuario.setFechaNacimientoUsuario(new Date(rs.getTimestamp("fechaNacimientoUsuario").getTime()));
                    usuario.setNombreUsuario(rs.getString("nombreUsuario"));
                    usuario.setRazonSocialUsuario(rs.getString("razonSocialUsuario"));
                    
                    // Para obtener el TipoUsuario asociado (relación ManyToOne)
                    TipoUsuario tipoUsuario = new TipoUsuario();
                    tipoUsuario.setCodTipoUsuario(rs.getLong("tipoUsuario_id"));
                    usuario.setTipoUsuario(tipoUsuario);
                    
                    return usuario;
                }
            }
        }
        return null;
    }

    public List<Usuario> obtenerTodosLosUsuarios() throws SQLException {
        List<Usuario> usuarios = new ArrayList<>();
        String sql = "SELECT * FROM usuario";
        try (PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                Usuario usuario = new Usuario();
                usuario.setCuilUsuario(rs.getLong("cuilUsuario"));
                usuario.setCorreoUsuario(rs.getString("correoUsuario"));
                usuario.setFechaNacimientoUsuario(new Date(rs.getTimestamp("fechaNacimientoUsuario").getTime()));
                usuario.setNombreUsuario(rs.getString("nombreUsuario"));
                usuario.setRazonSocialUsuario(rs.getString("razonSocialUsuario"));
                
                // Para obtener el TipoUsuario asociado (relación ManyToOne)
                TipoUsuario tipoUsuario = new TipoUsuario();
                tipoUsuario.setCodTipoUsuario(rs.getLong("tipoUsuario_id"));
                usuario.setTipoUsuario(tipoUsuario);
                
                usuarios.add(usuario);
            }
        }
        return usuarios;
    }

    public void actualizarUsuario(Usuario usuario) throws SQLException {
        String sql = "UPDATE usuario SET correoUsuario = ?, fechaNacimientoUsuario = ?, nombreUsuario = ?, razonSocialUsuario = ?, tipoUsuario_id = ? WHERE cuilUsuario = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, usuario.getCorreoUsuario());
            stmt.setTimestamp(2, new java.sql.Timestamp(usuario.getFechaNacimientoUsuario().getTime()));
            stmt.setString(3, usuario.getNombreUsuario());
            stmt.setString(4, usuario.getRazonSocialUsuario());
            stmt.setLong(5, usuario.getTipoUsuario().getCodTipoUsuario());
            stmt.setLong(6, usuario.getCuilUsuario());
            stmt.executeUpdate();
        }
    }

    public void eliminarUsuario(Long cuilUsuario) throws SQLException {
        String sql = "DELETE FROM usuario WHERE cuilUsuario = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, cuilUsuario);
            stmt.executeUpdate();
        }
    }
}
