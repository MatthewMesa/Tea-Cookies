import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EstadoInscripcionCursoRepository {
    private Connection conn;

    public EstadoInscripcionCursoRepository() throws SQLException {
        this.conn = DatabaseConnection.getConnection();
    }

    public void closeConnection() throws SQLException {
        if (conn != null && !conn.isClosed()) {
            conn.close();
        }
    }

    public void crearEstadoInscripcionCurso(EstadoInscripcionCurso estadoInscripcionCurso) throws SQLException {
        String sql = "INSERT INTO estado_inscripcion_curso (nombre_estado_inscripcion_curso, fecha_hora_fin_vigencia_estado_inscripcion_curso) VALUES (?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, estadoInscripcionCurso.getNombreEstadoInscripcionCurso());
            stmt.setTimestamp(2, new java.sql.Timestamp(estadoInscripcionCurso.getFechaHoraFinVigenciaEstadoInscripcionCurso().getTime()));
            stmt.executeUpdate();
        }
    }

    public EstadoInscripcionCurso obtenerEstadoInscripcionCursoPorId(Long id) throws SQLException {
        String sql = "SELECT * FROM estado_inscripcion_curso WHERE cod_estado_inscripcion_curso = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, id);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return new EstadoInscripcionCurso(
                            rs.getLong("cod_estado_inscripcion_curso"),
                            rs.getString("nombre_estado_inscripcion_curso"),
                            new Date(rs.getTimestamp("fecha_hora_fin_vigencia_estado_inscripcion_curso").getTime())
                    );
                }
            }
        }
        return null;
    }

    public List<EstadoInscripcionCurso> obtenerTodosLosEstadosInscripcionCurso() throws SQLException {
        List<EstadoInscripcionCurso> estados = new ArrayList<>();
        String sql = "SELECT * FROM estado_inscripcion_curso";
        try (PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                EstadoInscripcionCurso estado = new EstadoInscripcionCurso(
                        rs.getLong("cod_estado_inscripcion_curso"),
                        rs.getString("nombre_estado_inscripcion_curso"),
                        new Date(rs.getTimestamp("fecha_hora_fin_vigencia_estado_inscripcion_curso").getTime())
                );
                estados.add(estado);
            }
        }
        return estados;
    }

    public void actualizarEstadoInscripcionCurso(EstadoInscripcionCurso estadoInscripcionCurso) throws SQLException {
        String sql = "UPDATE estado_inscripcion_curso SET nombre_estado_inscripcion_curso = ?, fecha_hora_fin_vigencia_estado_inscripcion_curso = ? WHERE cod_estado_inscripcion_curso = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, estadoInscripcionCurso.getNombreEstadoInscripcionCurso());
            stmt.setTimestamp(2, new java.sql.Timestamp(estadoInscripcionCurso.getFechaHoraFinVigenciaEstadoInscripcionCurso().getTime()));
            stmt.setLong(3, estadoInscripcionCurso.getCodEstadoInscripcionCurso());
            stmt.executeUpdate();
        }
    }

    public void eliminarEstadoInscripcionCurso(Long id) throws SQLException {
        String sql = "DELETE FROM estado_inscripcion_curso WHERE cod_estado_inscripcion_curso = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setLong(1, id);
            stmt.executeUpdate();
        }
    }
}
